# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-02-08 07:03
from __future__ import unicode_literals

import base.char_trunc
import base.emailField
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AB_Candidate_Emails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', base.emailField.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='AB_Candidate_Names',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', base.char_trunc.TruncatingCharField(max_length=40)),
                ('last_name', base.char_trunc.TruncatingCharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='AB_Candidate_Phones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', base.char_trunc.TruncatingCharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='AB_User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='AddressBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', base.char_trunc.TruncatingCharField(blank=True, max_length=20)),
                ('phone_finalized', models.BooleanField(default=False)),
                ('email', base.emailField.EmailField(blank=True, max_length=254)),
                ('email_finalized', models.BooleanField(default=False)),
                ('first_name', base.char_trunc.TruncatingCharField(blank=True, max_length=40)),
                ('last_name', base.char_trunc.TruncatingCharField(blank=True, max_length=40)),
                ('first_name_finalized', models.BooleanField(default=False)),
                ('last_name_finalized', models.BooleanField(default=False)),
                ('users', models.ManyToManyField(through='userprofile.AB_User', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AppUserSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_profile_private', models.BooleanField(default=False)),
                ('is_wifi_data', models.BooleanField(default=False)),
                ('is_visible', models.BooleanField(default=True)),
                ('dnd', models.BooleanField(default=False)),
                ('block_unsolicited', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FutureUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('phone', base.char_trunc.TruncatingCharField(blank=True, max_length=20)),
                ('email', base.emailField.EmailField(blank=True, max_length=254)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitees', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('user_type', models.IntegerField(default=0)),
                ('activated', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_userprofile.userprofile_set+', to='contenttypes.ContentType')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WebExhibitorUserSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='WebOrganizerUserSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='userprofile.BaseUser')),
                ('do_sync', models.BooleanField(default=False)),
                ('device_id', base.char_trunc.TruncatingCharField(max_length=100)),
                ('reg_token', models.CharField(db_index=True, max_length=200)),
                ('device_type', base.char_trunc.TruncatingCharField(choices=[(b'ios', b'iPhone'), (b'android', b'Android')], max_length=10)),
                ('reco_generated_at', models.DateTimeField(default=datetime.datetime(2009, 12, 31, 18, 30, tzinfo=utc))),
                ('reco_ready', models.PositiveIntegerField(default=0)),
                ('settings', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='base_user', to='userprofile.AppUserSettings')),
            ],
            options={
                'abstract': False,
            },
            bases=('userprofile.baseuser',),
        ),
        migrations.CreateModel(
            name='WebExhibitorUser',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='userprofile.BaseUser')),
                ('settings', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='base_user', to='userprofile.WebExhibitorUserSettings')),
            ],
            options={
                'abstract': False,
            },
            bases=('userprofile.baseuser',),
        ),
        migrations.CreateModel(
            name='WebOrganizerUser',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='userprofile.BaseUser')),
                ('settings', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='base_user', to='userprofile.WebOrganizerUserSettings')),
            ],
            options={
                'abstract': False,
            },
            bases=('userprofile.baseuser',),
        ),
        migrations.AddField(
            model_name='baseuser',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_userprofile.baseuser_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='baseuser',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='baseuser', to='userprofile.UserProfile'),
        ),
        migrations.AddField(
            model_name='ab_user',
            name='ab_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userprofile.AddressBook'),
        ),
        migrations.AddField(
            model_name='ab_user',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ab_candidate_phones',
            name='ab_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_phones', to='userprofile.AddressBook'),
        ),
        migrations.AddField(
            model_name='ab_candidate_names',
            name='ab_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_names', to='userprofile.AddressBook'),
        ),
        migrations.AddField(
            model_name='ab_candidate_emails',
            name='ab_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_emails', to='userprofile.AddressBook'),
        ),
    ]
