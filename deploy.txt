FAQ:

1. What are the servers?
 The servers are grouped under WIZRUNENV (stage, test or dev), in wizcard/instances.py
2. What are the dbs?
  Look for Databases under different RUNENV's in wizcard/settings.py
3. How to clean up and Run (have not provided access to flushdb yet) but syncdb is run for every deployment Run Refer Usage:3
4. How to Run: Refer Usage:3 
5. How to look for errors or debug? - Exceptions are logged in sentry. getsentry.com (r_anand98@outlook.com, gowizcard)

Usage:
1. Change the hosts/machines in wizcard/instances.py and specify roles (Multiple services can run on the same machine)
2. Database instance in settings.py - confirm if its the right DB for the given environment (dev, test, prod) - Add as many as needed
3. Run ./deploy.sh <function> <env> <user> e.g. ./deploy.sh deploy test ubuntu.
Function can be 1. deploy 2. updateandrestart 3. startservices 4. stopservices 

4. On AWS instances the user is typically ubuntu
5. NOTE: it asks for git password (mad@anand).
6. After the script is run - You should see the processes running on the concerned hosts

Assumptions: 
1. The instances are fixed (if you need to change this check out wizcard/instances.py
2. the environment is one of "dev" or "test", its easy to add more env to settings.
3. git account is setup (talk to me for password details) or feel free to add your private key to the aws instance
4. req.txt is uptodate with packages needed
5. settings.py has necessary information for DB instance.

Known issues:

1. Nginx and upstart scripts are in git specific to instances, if you need to add more instances or change instances need to edit the getwizcard file with the hostnames
2. memcached at times is not running - Need to fix this, test/register fails quickly for us to detect this.
3. Security groups are preconfigured, if you want your host to talk to aws instances - whitelist in security group.

NOTE: please ensure that the req.txt is in git with the packages that needs update.


If you want anything else, you can run the fabric commands with appropriate commands - 

fab -f fabfile.py help 

lists all commands available.




